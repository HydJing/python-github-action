name: Flask App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify your Python version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest # Install pytest for running tests

      - name: Run Unit Tests
        run: pytest

      - name: Build Docker Image
        run: docker build -t flask-app-image .

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test # This job depends on the build-and-test job completing successfully
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify your Python version

      - name: Install Python dependencies for Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit # Install Bandit for static analysis

      - name: Run Bandit Security Scan
        run: bandit -r . -ll -f custom_json -o bandit_report.json || true # -ll for high/medium confidence, -f for format, -o for output file. '|| true' allows the workflow to continue even if Bandit finds issues.
        continue-on-error: true # Allow the workflow to proceed even if security issues are found, but the report will be generated.

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-security-report
          path: bandit_report.json

      # Optional: Add Trivy for Docker Image Vulnerability Scanning
      - name: Run Trivy Docker Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'flask-app-image' # Replace with the actual image name used in the build-and-test job
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0' # Do not fail the workflow on vulnerabilities, just report them
      - name: Upload Trivy Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-security-report
          path: trivy-results.txt
