name: Flask App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify your Python version

      - name: Install Python dependencies for tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest # Install pytest for running tests

      - name: Run Unit Tests
        run: pytest

  source-code-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify your Python version

      - name: Install Python dependencies for Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit # Install Bandit for static analysis

      - name: Run Bandit Security Scan
        run: bandit -r . -ll -f json -o bandit_report.json || true
        continue-on-error: true # Allow the workflow to proceed even if security issues are found

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-security-report
          path: bandit_report.json

  build-docker-image:
    runs-on: ubuntu-latest
    needs: unit-tests # Only build if unit tests pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t flask-app-image .

      - name: Save Docker Image to Tar
        run: docker save flask-app-image -o flask-app-image.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-artifact
          path: flask-app-image.tar

  docker-image-security-scan:
    runs-on: ubuntu-latest
    needs: build-docker-image # Only scan image if it was successfully built
    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image-artifact

      - name: Load Docker Image from Tar
        run: docker load -i flask-app-image.tar

      - name: Run Trivy Docker Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'flask-app-image'
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0' # Do not fail the workflow on vulnerabilities, just report them

      - name: Upload Trivy Scan Results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-security-report
          path: trivy-results.txt
